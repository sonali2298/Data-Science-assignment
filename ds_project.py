# -*- coding: utf-8 -*-
"""DS_Project.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1VC3V6cPsa69MYsxqGJH1L7reMlNjdchQ
"""

import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt

"""# **Read the dataset**"""

df = pd.read_csv("/content/pubg.csv")
df

"""# **Check the datatype of all the columns**"""

data_type = df.dtypes
data_type

"""# **Find the summary of all the numerical columns and write your findings about it**"""

num_summary = df.describe()
num_summary

"""# **The average person kills how many players?**"""

avg = df['kills'].mean()
print("Average is :", avg)

"""# **99% of people have how many kills?**"""

nn_per = df["kills"].quantile(0.99)
print("99% of people have",nn_per,"kills")

"""# **The most kills ever recorded are how much?**"""

most_kill = df["kills"].max()
print("Highest kills :",most_kill)

"""# **Print all the columns of the dataframe**"""

df.columns

"""# **Comment on distribution of the match's duration**"""

sns.distplot( df['matchDuration'] );

"""# **Comment on distribution of the walk distance**"""

sns.distplot( df['walkDistance'] );

"""# **Plot distribution of the match's duration vs walk distance one below the other**"""

# Commented out IPython magic to ensure Python compatibility.
# %matplotlib inline
plt.style.use('classic')
plt.figure()

plt.subplot(2,1,1)
plt.plot(df["matchDuration"],"-")
plt.xlabel("Match Duration")

plt.subplot(2,1,2)
plt.plot(df["walkDistance"],"--")
plt.xlabel("Walk Distance")

"""# **Plot distribution of the match's duration vs walk distance side by side**"""

plt.style.use('classic')
plt.figure(figsize=(10,5))

plt.subplot(1,2,1)
plt.plot(df["matchDuration"])
plt.xlabel("Match Duration")

plt.subplot(1,2,2)
plt.plot(df["walkDistance"])
plt.xlabel("Walk Distance")

"""# **Pairplot the dataframe. Comment on kills vs damage dealt, Comment on maxPlace vs numGroups**"""

sns.pairplot(df.head(700));

"""# **How many unique values are there in 'matchType' and what are their counts?**"""

uniq = pd.unique(df['matchType'])
print("Unique value in matchType is :",uniq)
n_uni = len(uniq)
print("Count of unique value in matchType is :",n_uni)

"""# **Plot a barplot of ‘matchType’ vs 'killPoints'**"""

sns.barplot(df['matchType'],df['killPoints']);

"""# **Plot a barplot of ‘matchType’ vs ‘weaponsAcquired’**"""

sns.barplot(df['matchType'],df['weaponsAcquired']);

"""# **Find the Categorical columns**"""

cat_col = df.select_dtypes('category').columns 
cat_col

"""# **Plot a boxplot of ‘matchType’ vs ‘winPlacePerc’**"""

sns.boxplot(x='matchType', y='winPlacePerc', data=df);

"""# **Plot a boxplot of ‘matchType’ vs ‘matchDuration’**"""

sns.boxplot(x='matchType', y='matchDuration', data=df);

"""# **Change the orientation of the above plot to horizontal**"""

sns.boxplot( x='matchDuration', y='matchType',data=df);

"""# **Add a new column called ‘KILL’ which contains the sum of following columns viz. headshotKills, teamKills, roadKills**"""

df['KILL'] = df['headshotKills'] + df['teamKills'] + df['roadKills']
df['KILL']

"""# **Round off column ‘winPlacePerc’ to 2 decimals**"""

df['winPlacePerc'].round(decimals=2)

"""#**Take a sample of size 50 from the column damageDealt for 100 times and calculate its mean.Plot it on a histogram and comment on its distribution**"""

mean = []

for i in range(100):
  
  for x in range(0,1001,50):
    
    mean1 = df['damageDealt'].head(x).mean()
    mean.append(mean1)
 
sns.histplot(data=df['damageDealt'], x=mean)

